{
  "sksl": "// This SkSL shader is autogenerated by spirv-cross.\n\nfloat4 flutter_FragCoord;\n\nuniform vec2 uSize;\nuniform float uPixelRatio;\nuniform vec2 brickSize;\nuniform shader tPixelTexture;\nuniform half2 tPixelTexture_size;\nuniform shader tTexture;\nuniform half2 tTexture_size;\n\nvec4 fragColor;\n\nvec2 FLT_flutter_local_FlutterFragCoord()\n{\n    return flutter_FragCoord.xy;\n}\n\nvoid FLT_flutter_local_fragment(inout vec2 pos, inout vec4 color, float displacement)\n{\n    pos.y += displacement;\n    vec2 st = pos;\n    st /= vec2(uPixelRatio);\n    st /= brickSize;\n    float tiling = step(1.0, mod(st.x, 2.0)) * 0.5;\n    float brickY;\n    if (tiling != 0.0)\n    {\n        brickY = floor((pos.y + (brickSize.y * 0.5)) / brickSize.y) - 1.0;\n    }\n    else\n    {\n        brickY = floor(pos.y / brickSize.y);\n    }\n    float brickX = floor(pos.x / brickSize.x);\n    float bricksY = floor((uSize.y / brickSize.y) - tiling);\n    float bricksXAmount = floor(uSize.x / brickSize.x);\n    float bricksYAmount;\n    if (tiling != 0.0)\n    {\n        bricksYAmount = floor(uSize.y / brickSize.y) - 2.0;\n    }\n    else\n    {\n        bricksYAmount = floor(uSize.y / brickSize.y) - 1.0;\n    }\n    if (tiling != 0.0)\n    {\n        if ((brickY == bricksY) || (brickY < 0.0))\n        {\n            color = vec4(0.0);\n            return;\n        }\n    }\n    else\n    {\n        if (brickY >= bricksY)\n        {\n            color = vec4(0.0);\n            return;\n        }\n    }\n    st.y += tiling;\n    st = fract(st);\n    float puvy = brickY / bricksYAmount;\n    float puvx = brickX / bricksXAmount;\n    vec4 tileColor = tTexture.eval(tTexture_size *  vec2(puvx, puvy));\n    vec4 _182 = tileColor;\n    vec3 _184 = _182.xyz / vec3(0.89999997615814208984375);\n    tileColor.x = _184.x;\n    tileColor.y = _184.y;\n    tileColor.z = _184.z;\n    vec2 ssize = vec2(1.0);\n    vec2 bst = st / ssize;\n    vec2 rst = (st - vec2((1.0 - ssize.x) / 2.0, 0.0)) / ssize;\n    vec2 gst = (st - vec2(1.0 - ssize.x, 0.0)) / ssize;\n    color = vec4(0.0, 0.0, 0.0, 1.0);\n    vec3 sizer = tileColor.xyz * 4.0;\n    sizer = smoothstep(vec3(0.0), vec3(1.0), sizer);\n    rst /= vec2(sizer.x);\n    rst -= vec2(1.0 - sizer.x);\n    color.x = tPixelTexture.eval(tPixelTexture_size *  rst).x * tileColor.x;\n    gst /= vec2(sizer.y);\n    gst -= vec2(1.0 - sizer.y);\n    color.y = tPixelTexture.eval(tPixelTexture_size *  gst).y * tileColor.y;\n    bst.y /= sizer.z;\n    bst.y -= (1.0 - sizer.z);\n    color.z = tPixelTexture.eval(tPixelTexture_size *  bst).z * tileColor.z;\n    color.w = (color.z + color.y) + color.x;\n}\n\nfloat FLT_flutter_local_getLuma(vec3 color)\n{\n    vec3 weights = vec3(0.2989999949932098388671875, 0.58700001239776611328125, 0.114000000059604644775390625);\n    return dot(color, weights);\n}\n\nvoid FLT_main()\n{\n    vec2 pos = FLT_flutter_local_FlutterFragCoord();\n    vec2 uv = pos / uSize;\n    vec2 param = pos;\n    vec4 color_1;\n    vec4 param_1 = color_1;\n    float param_2 = 0.0;\n    FLT_flutter_local_fragment(param, param_1, param_2);\n    color_1 = param_1;\n    vec2 param_3 = pos + (vec2(brickSize) / vec2(2.0));\n    vec4 color2;\n    vec4 param_4 = color2;\n    float param_5 = 0.0;\n    FLT_flutter_local_fragment(param_3, param_4, param_5);\n    color2 = param_4;\n    vec3 param_6 = color2.xyz;\n    float lumacolor2 = FLT_flutter_local_getLuma(param_6);\n    if (lumacolor2 > 0.4000000059604644775390625)\n    {\n        vec4 _346 = color_1;\n        vec3 _351 = mix(_346.xyz, color2.xyz, vec3(0.5));\n        color_1.x = _351.x;\n        color_1.y = _351.y;\n        color_1.z = _351.z;\n    }\n    vec4 _359 = color_1;\n    vec3 _361 = _359.xyz * 1.2000000476837158203125;\n    color_1.x = _361.x;\n    color_1.y = _361.y;\n    color_1.z = _361.z;\n    fragColor = color_1;\n}\n\nhalf4 main(float2 iFragCoord)\n{\n      flutter_FragCoord = float4(iFragCoord, 0, 0);\n      FLT_main();\n      return fragColor;\n}\n",
  "stage": 1,
  "target_platform": 2,
  "uniforms": [
    {
      "array_elements": 0,
      "bit_width": 32,
      "columns": 1,
      "location": 0,
      "name": "uSize",
      "rows": 2,
      "type": 10
    },
    {
      "array_elements": 0,
      "bit_width": 32,
      "columns": 1,
      "location": 1,
      "name": "uPixelRatio",
      "rows": 1,
      "type": 10
    },
    {
      "array_elements": 0,
      "bit_width": 32,
      "columns": 1,
      "location": 2,
      "name": "brickSize",
      "rows": 2,
      "type": 10
    },
    {
      "array_elements": 0,
      "bit_width": 0,
      "columns": 1,
      "location": 3,
      "name": "tPixelTexture",
      "rows": 1,
      "type": 12
    },
    {
      "array_elements": 0,
      "bit_width": 0,
      "columns": 1,
      "location": 4,
      "name": "tTexture",
      "rows": 1,
      "type": 12
    }
  ]
}